
stages:
  - build
  - deploy

build_docker_dev: &build
  stage: build
  image: docker:23.0-cli
  services:
    - docker:dind
  variables:
    env: $ENV_DEV_SDP
    APP_REGISTRY: webapp_sdp

    APP_TAG_LATEST: $APPSCYCLONE_REGISTRY/$APP_REGISTRY:$CI_COMMIT_REF_NAME-latest
    APP_TAG_COMMIT: $APPSCYCLONE_REGISTRY/$APP_REGISTRY:$CI_COMMIT_SHORT_SHA

  only:
    - develop
  script:
    # define .env
    - cat $env > .env

    # login docker registry
    - docker login -u $DOCKER_USER -p $DOCKER_PASS $APPSCYCLONE_REGISTRY
    - docker build -t $APP_TAG_LATEST -t $APP_TAG_COMMIT .

    - docker push $APP_TAG_LATEST
    - docker push $APP_TAG_COMMIT

# build_docker_staging:
#   <<: *build
#   variables:
#     env: $ENV_STAGING_SDP
#   only:
#     - staging

# build_docker_prod:
#   <<: *build
#   variables:
#     env: $ENV_PROD_SDP
#   only:
#     - master

deploy_dev: &deploy
  stage: deploy
  image: alpine:3.15
  variables:
    USER: $USER_DEV_SDP
    KEY: $KEY_DEV_SDP
    IP_SERVER: $SERVER_DEV_SDP

  only:
    - develop
  script:
    #ssh to server
    - apk add --no-cache openssh-client
    - mkdir -p ~/.ssh
    - chmod -R 700 ~/.ssh/
    - (umask  077 ; echo $KEY | base64 -d > ~/.ssh/sdp-deploy)
    - chmod 600 ~/.ssh/sdp-deploy
    - ssh-keyscan -t rsa $IP_SERVER > ~/.ssh/known_hosts
    - ssh -i ~/.ssh/sdp-deploy -o StrictHostKeyChecking=no $USER@$IP_SERVER "cd sdp/application;docker compose pull;docker compose up -d "

# deploy_staging:
#   <<: *deploy
#   variables:
#     USER: $USER_STAGING_SDP
#     KEY: $KEY_STAGING_SDP
#     IP_SERVER: $SERVER_DEV_SDP
#   only:
#     - staging

# deploy_prod:
#   <<: *deploy
#   variables:
#     USER: $USER_PROD_SDP
#     KEY: $KEY_PROD_SDP
#     IP_SERVER: $SERVER_PROD_SDP
#   only:
#     - master